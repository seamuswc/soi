import { bp as HexInput, G as AccountPublicKey, dr as SigningScheme } from '../../account-BortO8g2.mjs';
import { BaseAccountPublicKey } from './types.mjs';
import '../../types/indexer.mjs';
import '../../types/generated/operations.mjs';
import '../../types/generated/types.mjs';
import '../../utils/apiEndpoints.mjs';
import '../../utils/const.mjs';
import '../common.mjs';

/**
 * Helper function to convert a message to sign or to verify to a valid message input
 *
 * @param message a message as a string or Uint8Array
 *
 * @returns a valid HexInput - string or Uint8Array
 * @group Implementation
 * @category Serialization
 */
declare const convertSigningMessage: (message: HexInput) => HexInput;
declare const accountPublicKeyToBaseAccountPublicKey: (publicKey: AccountPublicKey) => BaseAccountPublicKey;
declare const accountPublicKeyToSigningScheme: (publicKey: AccountPublicKey) => SigningScheme;

export { accountPublicKeyToBaseAccountPublicKey, accountPublicKeyToSigningScheme, convertSigningMessage };
